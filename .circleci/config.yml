version: 2
jobs:

    unit-test:
        machine: true
        steps:
            - checkout
            - run: echo "Running unit tests"

    integration-test:
        machine: true
        steps:
            - checkout
            - run: echo "Running integration tests"

    stress-test:
        machine: true
        steps:
            - checkout
            - run: echo "Running stress tests"
    build:
        machine: true
        steps:
            - checkout
            - run:
                name: Setup the commit sha
                command: | 
                    echo 'export TAG=$(echo $CIRCLE_SHA1 | cut -c 1-8)' >> $BASH_ENV
                    source $BASH_ENV
            - run:
                name: Build the Image
                command: docker build -t docker.io/ilyeshammadi/aliwhat:$CIRCLE_BRANCH-$TAG .
            - run:
                name: Login and push to the Registry
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
                    docker push docker.io/ilyeshammadi/aliwhat:$CIRCLE_BRANCH-$TAG
            - run: echo "Build the docker image"

    deploy-prod:
        machine: true
        steps:
            - run: echo "Deploy to production"

    deploy-staging:
        docker:
            - image: google/cloud-sdk
        environment:
            PROJECT_NAME: "aliwhat"
            GOOGLE_PROJECT_ID: "ilyes-sandbox"
            GOOGLE_COMPUTE_ZONE: "europe-west4-a"
            GOOGLE_CLUSTER_NAME: "sandbox"
        steps:
            - checkout
            - run: 
                name: Setup Google Cloud SDK
                command: |
                    apt-get install -qq -y gettext
                    echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
                    gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
                    gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
                    gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
                    gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
            - setup_remote_docker
            # - run: 
            #     name: Docker build and push
            #     command: |
            #         docker build \
            #         --build-arg COMMIT_REF=${CIRCLE_SHA1} \
            #         --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
            #         -t ${PROJECT_NAME} .
            #         docker tag ${PROJECT_NAME} eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            #         gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            #         docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            - run: 
                name: Deploy to Kubernetes
                command: |
                    # envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
                    # kubectl apply -f ${HOME}/patched_k8s.yml
                    # kubectl rollout status deployment/${PROJECT_NAME}
                    kubectl run nginx --image=nginx:alpine --port=80 --namespace=default

workflows:
  version: 2
  workflow:
    jobs:
        - unit-test:
            filters:
                tags:
                    only: /^[0-9]+.[0-9]+.[0-9]+$/

        - integration-test:
            filters:
                tags:
                    only: /^[0-9]+.[0-9]+.[0-9]+$/

        - stress-test:
            filters:
                branches:
                    only:
                        - master
                tags:
                    only: /^[0-9]+.[0-9]+.[0-9]+$/

        
        # Build only for master, develop and stable releases
        - build:
            requires:
                - unit-test
                - integration-test
                - stress-test
            filters:
                branches:
                    only:
                        - master
                        - develop
                tags:
                    only: /^[0-9]+.[0-9]+.[0-9]+$/
        
        # Hold before deploying to production
        # Production is only triggerd on releases
        - hold:
            type: approval
            requires:
                - build
            filters:
                branches:
                    ignore: /.*/
                tags:
                    only: /^[0-9]+.[0-9]+.[0-9]+$/
        
        - deploy-prod:
            requires:
                - hold
            filters:
                branches:
                    ignore: /.*/
                tags:
                    only: /^[0-9]+.[0-9]+.[0-9]+$/
        
        # Deploy only when commits to develop branch
        - deploy-staging:
            requires:
                - build
            filters:
                branches:
                    only:
                        - develop